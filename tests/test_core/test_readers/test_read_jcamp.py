# -*- coding: utf-8 -*-

#  =====================================================================================
#  Copyright (Â©) 2015-2022 LCS - Laboratoire Catalyse et Spectrochimie, Caen, France.
#  CeCILL-B FREE SOFTWARE LICENSE AGREEMENT
#  See full LICENSE agreement in the root directory.
#  =====================================================================================

# flake8: noqa

import pytest
from spectrochempy.core.dataset.nddataset import NDDataset


@pytest.fixture(scope="function")
def JDX_2D():

    jdx = """##TITLE=IR_2D
    ##JCAMP-DX=5.01
    ##DATA TYPE=LINK
    ##BLOCKS=3
    ##TITLE=vz0466.spa, Wed Jul 06 21:00:38 2016 (GMT+02:00)
    ##JCAMP-DX=5.01
    ##ORIGIN=omnic
    ##OWNER=christian@MacCF.local
    ##LONGDATE=2016/07/06
    ##TIME=19:03:14
    ##XUNITS=1/CM
    ##YUNITS=ABSORBANCE
    ##FIRSTX=5999.555664
    ##LASTX=5981.234938
    ##MAXX=5999.555664
    ##MINX=5981.234938
    ##XFACTOR=1.0
    ##FIRSTY=2.057242
    ##LASTY=2.047518
    ##MAXY=2.060812
    ##MINY=2.002743
    ##YFACTOR=1e-08
    ##NPOINTS=20
    ##XYDATA=(X++(Y..Y))
    5999.555664 205724239.000000 206081247.000000 206077337.000000 205761122.000000 
    5995.698669 205383539.000000 205176067.000000 205163621.000000 205173397.000000 
    5991.841674 205024647.000000 204717803.000000 204435229.000000 204356765.000000 
    5987.984679 204492545.000000 204698991.000000 204843306.000000 204916620.000000 
    5984.127684 204970645.000000 204992580.000000 204916238.000000 204751849.000000 
    ##END
    ##TITLE=vz0467.spa, Wed Jul 06 21:10:38 2016 (GMT+02:00)
    ##JCAMP-DX=5.01
    ##ORIGIN=omnic
    ##OWNER=christian@MacCF.local
    ##LONGDATE=2016/07/06
    ##TIME=19:13:14
    ##XUNITS=1/CM
    ##YUNITS=ABSORBANCE
    ##FIRSTX=5999.555664
    ##LASTX=5981.234938
    ##MAXX=5999.555664
    ##MINX=5981.234938
    ##XFACTOR=1.0
    ##FIRSTY=2.057242
    ##LASTY=2.047518
    ##MAXY=2.060812
    ##MINY=2.002743
    ##YFACTOR=1e-08
    ##NPOINTS=20
    ##XYDATA=(X++(Y..Y))
    5999.555664 203330016.000000 203735828.000000 203964066.000000 203920483.000000 
    5995.698669 203658008.000000 203311467.000000 203041100.000000 202970385.000000 
    5991.841674 203081583.000000 203193688.000000 203127312.000000 202899098.000000 
    5987.984679 202673625.000000 202544808.000000 202475214.000000 202450990.000000 
    5984.127684 202554702.000000 202821636.000000 203135919.000000 203363680.000000 
    ##END
    ##TITLE=vz0468.spa, Wed Jul 06 21:20:38 2016 (GMT+02:00)
    ##JCAMP-DX=5.01
    ##ORIGIN=omnic
    ##OWNER=christian@MacCF.local
    ##LONGDATE=2016/07/06
    ##TIME=19:23:14
    ##XUNITS=1/CM
    ##YUNITS=ABSORBANCE
    ##FIRSTX=5999.555664
    ##LASTX=5981.234938
    ##MAXX=5999.555664
    ##MINX=5981.234938
    ##XFACTOR=1.0
    ##FIRSTY=2.057242
    ##LASTY=2.047518
    ##MAXY=2.060812
    ##MINY=2.002743
    ##YFACTOR=1e-08
    ##NPOINTS=20
    ##XYDATA=(X++(Y..Y))
    5999.555664 200489759.000000 200328993.000000 200274324.000000 200440287.000000 
    5995.698669 200729274.000000 200897192.000000 200821328.000000 200623416.000000 
    5991.841674 200488710.000000 200454282.000000 200441122.000000 200419855.000000 
    5987.984679 200450921.000000 200571250.000000 200716447.000000 200771117.000000 
    5984.127684 200681734.000000 200519037.000000 200432109.000000 200508308.000000 
    ##END
    ##END=

    """
    return jdx


def test_read_jcamp(JDX_2D):

    # read
    Y = NDDataset.read_jdx({"some2Dspectra.jdx": JDX_2D.encode("utf8")})
    assert str(Y.coordset) == "CoordSet: [x:wavenumbers, y:acquisition timestamp (GMT)]"
    assert Y.shape == (3, 20)

    f = Y.write_jdx("2D.jdx", confirm=False)
    Y = NDDataset.read(f)
    assert str(Y.coordset) == "CoordSet: [x:wavenumbers, y:acquisition timestamp (GMT)]"
    assert Y.shape == (3, 20)
    assert Y.name == "IR_2D"

    f.unlink()
